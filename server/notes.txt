--"scripts": {
    "test": "jest --verbose"
  },


--"jest": {
    "globalSetup": "./jest-setup.js",
    "globalTeardown": "./jest-teardown.js"
  },

 --"dependencies": {
    "@babel/plugin-transform-async-to-generator": "^7.1.0",
    "@babel/runtime": "^7.1.2",
}

"devDependencies": {

    --"@babel/plugin-transform-runtime": "^7.1.0",
    --"babel-jest": "^23.6.0",
    "enzyme": "^3.7.0",
    "enzyme-adapter-react-16": "^1.6.0",
    "enzyme-to-json": "^3.3.4",
    --"jest": "^23.6.0",
    "react-addons-test-utils": "^15.6.2",
    "react-test-renderer": "^16.5.2",
    "supertest": "^3.3.0",
  }
}

      {
        test: /jsx?$/,
        exclude: /node_modules/,
        loader: 'babel-loader',
        query: {
          presets: ['@babel/env', '@babel/react'],
          --plugins: ['@babel/plugin-transform-runtime', '@babel/transform-async-to-generator'],
        },
      },

--jest-teardown.js
module.exports = async (globalConfig) => {
  testServer.close();
};

--jest-setup.js
module.exports = async () => {
  global.testServer = await require('./server');
};

----------------------------------------------------------------------------

__tests__

import React from 'react';
import { configure, shallow } from 'enzyme';
import Adapter from 'enzyme-adapter-react-16';
import toJson from 'enzyme-to-json';

// Enzyme is a wrapper around React test utilities which makes it easier to
// shallow render and traverse the shallow rendered tree.
import LabeledText from '../client/components/LabeledText';
import MarketDisplay from '../client/components/MarketDisplay';
import MarketsDisplay from '../client/components/MarketsDisplay';

// Newer Enzyme versions require an adapter to a particular version of React
configure({ adapter: new Adapter() });

describe('React unit tests', () => {
  describe('LabeledText', () => {
    let wrapper;
    const props = {
      label: 'Mega',
      text: 'Markets',
    };

    beforeAll(() => {
      wrapper = shallow(<LabeledText {...props} />);
    });

    it('Renders a <p> tag with the label in bold', () => {
      expect(wrapper.type()).toEqual('p');
      expect(wrapper.text()).toEqual('Mega: Markets');
      expect(wrapper.find('strong').text()).toMatch('Mega');
    });
  });

  describe('MarketDisplay', () => {


  });

  describe('MarketsDisplay', () => {

  });
});


